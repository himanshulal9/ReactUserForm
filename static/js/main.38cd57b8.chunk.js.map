{"version":3,"sources":["components/common.jsx","components/styles.jsx","firebase.js","components/uploadedData.jsx","components/formComponent.jsx","components/Footer.jsx","components/AppBar.jsx","App.js","index.js"],"names":["renderText","type","label","color","rest","Typography","variant","renderInputField","name","state","onChange","data","errors","TextField","size","fullWidth","value","error","helperText","renderSelect","options","select","map","item","MenuItem","key","styles","formContainer","display","flexFlow","justifyContent","alignItems","height","form","padding","minHeight","marginTop","formTitle","blueGrey","textAlign","margin","uploadDataRoot","maxHeight","overflowY","cardData","position","marginBottom","textTransform","deletebutton","top","right","dataDisplay","width","backgroundColor","orange","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","useStyles","makeStyles","UploadedData","classes","useState","fetched","setFetched","users","setUsers","deleteData","id","console","log","collection","doc","delete","then","res","useEffect","get","userData","objItem","forEach","push","className","Grid","container","length","xs","align","i","Card","CardContent","IconButton","onClick","component","firstName","lastName","email","gender","address","style","CircularProgress","FormComponent","this","props","handleOnChange","target","setState","sm","onSubmit","e","preventDefault","uploadedData","Paper","Box","mb","p","gutterBottom","Button","Component","withStyles","Footer","href","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","AppBar","Toolbar","edge","aria-label","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38cd57b8.chunk.js","sourcesContent":["import { Button, MenuItem, TextField, Typography } from \"@material-ui/core\";\r\n\r\nexport const renderText = ({ type, label, color, ...rest }) => (\r\n  <Typography variant={type} color={color} {...rest}>\r\n    {label}\r\n  </Typography>\r\n);\r\n\r\nexport const renderInputField = ({ name, label, type, state, onChange }) => {\r\n  const { data, errors } = state;\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      type={type ? type : \"text\"}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\nexport const renderSelect = ({ name, label, options, state, onChange }) => {\r\n  const { data, errors } = state;\r\n  return (\r\n    <TextField\r\n      select\r\n      label={label}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}>\r\n      {options.map((item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.key}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport const renderButton = ({ label, variant, color, fullWidth, onClick }) => (\r\n  <Button\r\n    variant={variant ? variant : \"outlined\"}\r\n    color={color ? color : \"primary\"}\r\n    fullWidth={fullWidth ? fullWidth : false}\r\n    onClick={onClick}>\r\n    {label}\r\n  </Button>\r\n);\r\n","import { orange } from \"@material-ui/core/colors\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\n\r\nexport const styles = {\r\n  formContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"row Wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"88vh\",\r\n  },\r\n\r\n  form: {\r\n    padding: \"10px\",\r\n    minHeight: \"350px\",\r\n    height: \"auto\",\r\n    marginTop: \"65px\",\r\n  },\r\n  formTitle: {\r\n    color: blueGrey[700],\r\n    textAlign: \"center\",\r\n    margin: \"10px 0px 30px 0px\",\r\n  },\r\n\r\n  //uploadded data style\r\n  uploadDataRoot: {\r\n    padding: \"16px\",\r\n    minHeight: \"327px\",\r\n    maxHeight: \"327px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  cardData: {\r\n    position: \"relative\",\r\n    marginBottom: \"8px\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  deletebutton: {\r\n    position: \"absolute\",\r\n    top: \"0px \",\r\n    right: \"0px\",\r\n  },\r\n\r\n  dataDisplay: {\r\n    width: \"100%\",\r\n    backgroundColor: orange[500],\r\n    color: \"white\",\r\n  },\r\n};\r\n","import firebase from \"firebase\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp8sgkqVNQHDWSp3en5Jmm-DX-6ygHfTc\",\r\n  authDomain: \"reactcrudapp007.firebaseapp.com\",\r\n  projectId: \"reactcrudapp007\",\r\n  storageBucket: \"reactcrudapp007.appspot.com\",\r\n  messagingSenderId: \"1037735974106\",\r\n  appId: \"1:1037735974106:web:3585e5c05831e631b481e3\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default firebaseApp;\r\nexport { db };\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Card,\r\n  CircularProgress,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { styles } from \"./styles\";\r\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UploadedData() {\r\n  const classes = useStyles();\r\n  const [fetched, setFetched] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const deleteData = (id) => {\r\n    console.log(\"id:\", id);\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .delete()\r\n      .then((res) => console.log(\"del_response\", res));\r\n  };\r\n\r\n  useEffect(() => {\r\n    !fetched &&\r\n      db\r\n        .collection(\"users\")\r\n        .get()\r\n        .then(function (item) {\r\n          const userData = [];\r\n          const objItem = {};\r\n          item.forEach(function (doc) {\r\n            objItem.id = doc.id;\r\n            objItem.data = doc.data();\r\n            userData.push(objItem);\r\n          });\r\n          //updating the state\r\n          setUsers(userData);\r\n          setFetched(false);\r\n        });\r\n  }, [fetched, deleteData]);\r\n\r\n  return (\r\n    <div className={classes.uploadDataRoot}>\r\n      <Grid container>\r\n        {users.length === 0 ? (\r\n          <Grid item xs={12}>\r\n            <Typography align='center'>No Data To Show</Typography>\r\n          </Grid>\r\n        ) : users.length > 0 ? (\r\n          users.map((item, i) => (\r\n            <Grid item xs={12} key={i}>\r\n              <Card className={classes.cardData}>\r\n                <CardContent>\r\n                  <IconButton\r\n                    color='secondary'\r\n                    className={classes.deletebutton}\r\n                    onClick={deleteData(item.id)}>\r\n                    <DeleteForeverOutlinedIcon />\r\n                  </IconButton>\r\n                  <Typography\r\n                    variant='body1'\r\n                    component='h6'>{` ${item.data.firstName} ${item.data.lastName}`}</Typography>\r\n                  <Typography variant='body1'>{item.data.email}</Typography>\r\n                  <Typography variant='body2'>{item.data.gender}</Typography>\r\n                  <Typography variant='body2'>{item.data.address}</Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"100px\",\r\n            }}>\r\n            <CircularProgress color='primary' />\r\n          </Grid>\r\n        )}\r\n        {/* {users.length === 0 ? (\r\n          \r\n        ) : (\r\n          <p\r\n            style={{\r\n              padding: \"16px\",\r\n              height: \"150px\",\r\n              display: \"flex\",\r\n              flexFlow: \"row wrap\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}>\r\n            <CircularProgress color='primary' />\r\n          </p>\r\n        )} */}\r\n      </Grid>\r\n      {/* <List dense={true}>\r\n        {users.length ? (\r\n          users.map(({ data }) =>\r\n            Object.entries(data).map((obj, i) => (\r\n              <Box className={classes.dataDisplay}>\r\n                <ListItem>\r\n                  <ListItemIcon>{obj[0]}</ListItemIcon>\r\n                  <ListItemText>{obj[1]}</ListItemText>\r\n                </ListItem>\r\n              </Box>\r\n            ))\r\n          )\r\n        ) : (\r\n          <Box\r\n            style={{\r\n              padding: \"16px\",\r\n              height: \"150px\",\r\n              display: \"flex\",\r\n              flexFlow: \"row wrap\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}>\r\n            <CircularProgress color='primary' />\r\n          </Box>\r\n        )}\r\n      </List> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Grid, Paper, withStyles, Card } from \"@material-ui/core\";\r\nimport { renderInputField, renderSelect, renderText } from \"./common\";\r\nimport { styles } from \"./styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport UploadedData from \"./uploadedData\";\r\n\r\nclass FormComponent extends Component {\r\n  state = {\r\n    data: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      gender: \"\",\r\n      address: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const { data, uploadedData } = this.state;\r\n      uploadedData.push(data);\r\n      this.setState({ uploadedData });\r\n      console.log(\"form submitted\");\r\n      console.log(this.state.uploadedData);\r\n    };\r\n\r\n    const handleOnChange = ({ target }) => {\r\n      const { data, errors } = this.state;\r\n\r\n      target.value.length <= 3\r\n        ? (errors[target.name] = `${target.name} have at least 3 letter`)\r\n        : (errors[target.name] = \"\");\r\n\r\n      data[target.name] = target.value;\r\n      this.setState({ data, errors });\r\n    };\r\n\r\n    return (\r\n      <Grid container className={classes.formContainer}>\r\n        <Grid item xs={12} sm={10}>\r\n          <form onSubmit={handleSubmit} className={classes.form}>\r\n            <Paper component={Box} mb={2} p={2}>\r\n              <Box>\r\n                {renderText({\r\n                  type: \"h6\",\r\n                  color: \"primary\",\r\n                  label: \"Simple User Form\",\r\n                  align: \"center\",\r\n                  gutterBottom: true,\r\n                })}\r\n              </Box>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Box mb={2}>\r\n                        {renderInputField({\r\n                          name: \"firstName\",\r\n                          label: \"First Name\",\r\n                          type: \"text\",\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      <Box mb={2}>\r\n                        {renderInputField({\r\n                          name: \"lastName\",\r\n                          label: \"Last Name\",\r\n                          type: \"text\",\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n\r\n                      <Box mb={2}>\r\n                        {renderInputField({\r\n                          name: \"email\",\r\n                          label: \"Email@example.com\",\r\n                          type: \"email\",\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      <Box mb={2}>\r\n                        {renderSelect({\r\n                          name: \"gender\",\r\n                          label: \"Gender\",\r\n                          options: [\r\n                            { key: \"male\", value: \"male\" },\r\n                            { key: \"female\", value: \"female\" },\r\n                            { key: \"other\", value: \"other\" },\r\n                          ],\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      {renderInputField({\r\n                        name: \"address\",\r\n                        label: \"Address\",\r\n                        type: \"text\",\r\n                        state: this.state,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                    </CardContent>\r\n                    <p\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        padding: \"0px 16px\",\r\n                        margin: \"10px 0px\",\r\n                      }}>\r\n                      <Button\r\n                        type='submit'\r\n                        color='primary'\r\n                        variant='contained'\r\n                        fullWidth={true}\r\n                        size='small'>\r\n                        Submit\r\n                      </Button>\r\n                    </p>\r\n                  </Card>\r\n                </Grid>\r\n\r\n                {/* uploaded data  */}\r\n                <Grid item xs={12} sm={6}>\r\n                  <UploadedData />\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FormComponent);\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} style={{ backgroundColor: \"#efefef\" }}>\r\n        <Box p={2}>\r\n          <Typography\r\n            variant='body1'\r\n            component='h6'\r\n            color='textSecondary'\r\n            align='center'>\r\n            Created with <FavoriteIcon color='secondary' /> All right Reserved{\" \"}\r\n            <a href='https://www.facebook.com/winnersujeet' target='blank'>\r\n              @SujeetGupta\r\n            </a>\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmojiFlagsIcon from \"@material-ui/icons/EmojiFlags\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='fixed'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'>\r\n            <EmojiFlagsIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            React Form\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import FormComponent from \"./components/formComponent\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/AppBar\";\nimport { Box } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Box>\n      <Navbar />\n      <FormComponent />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}