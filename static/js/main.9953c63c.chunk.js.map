{"version":3,"sources":["components/common.jsx","components/styles.jsx","components/formComponent.jsx","App.js","index.js"],"names":["renderText","type","label","color","rest","Typography","variant","renderInputField","name","state","onChange","data","errors","TextField","size","fullWidth","value","error","helperText","renderSelect","options","select","map","item","MenuItem","key","renderButton","onClick","Button","styles","formContainer","display","flexFlow","justifyContent","alignItems","height","form","padding","minHeight","formTitle","blueGrey","textAlign","margin","steps","FormComponent","firstName","middleName","lastName","gender","suggession","uploadedData","classes","this","props","handleOnChange","target","length","setState","Grid","container","className","xs","sm","onSubmit","handleSubmit","Paper","component","Box","mb","pt","align","Card","CardContent","mt","style","List","ListItem","ListItemIcon","ListItemText","Component","withStyles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9953c63c.chunk.js","sourcesContent":["import { Button, MenuItem, TextField, Typography } from \"@material-ui/core\";\r\n\r\nexport const renderText = ({ type, label, color, ...rest }) => (\r\n  <Typography variant={type} color={color} {...rest}>\r\n    {label}\r\n  </Typography>\r\n);\r\n\r\nexport const renderInputField = ({ name, label, type, state, onChange }) => {\r\n  const { data, errors } = state;\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      type={type ? type : \"text\"}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\nexport const renderSelect = ({ name, label, options, state, onChange }) => {\r\n  const { data, errors } = state;\r\n  return (\r\n    <TextField\r\n      select\r\n      label={label}\r\n      variant='outlined'\r\n      color='primary'\r\n      size='small'\r\n      fullWidth={true}\r\n      name={name}\r\n      value={data[name]}\r\n      error={errors[name] ? true : false}\r\n      helperText={errors[name] ? errors[name] : \"\"}\r\n      onChange={onChange}>\r\n      {options.map((item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.key}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport const renderButton = ({ label, variant, color, fullWidth, onClick }) => (\r\n  <Button\r\n    variant={variant ? variant : \"outlined\"}\r\n    color={color ? color : \"primary\"}\r\n    fullWidth={fullWidth ? fullWidth : false}\r\n    onClick={onClick}>\r\n    {label}\r\n  </Button>\r\n);\r\n","import { blueGrey } from \"@material-ui/core/colors\";\r\n\r\nexport const styles = {\r\n  formContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"row Wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"98vh\",\r\n  },\r\n\r\n  form: {\r\n    padding: \"10px\",\r\n    minHeight: \"350px\",\r\n    height: \"auto\",\r\n  },\r\n  formTitle: {\r\n    color: blueGrey[700],\r\n    textAlign: \"center\",\r\n    margin: \"10px 0px 30px 0px\",\r\n  },\r\n\r\n  steps: {\r\n    padding: \"16px\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  withStyles,\r\n  List,\r\n  Card,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  renderButton,\r\n  renderInputField,\r\n  renderSelect,\r\n  renderText,\r\n} from \"./common\";\r\nimport { styles } from \"./styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\n\r\nclass FormComponent extends Component {\r\n  state = {\r\n    data: {\r\n      firstName: \"\",\r\n      middleName: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      suggession: \"\",\r\n    },\r\n    errors: {},\r\n    uploadedData: [],\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.setState(this.state.uploadedData.push(this.state.data));\r\n      console.log(\"form submitted\");\r\n    };\r\n\r\n    const handleOnChange = ({ target }) => {\r\n      const { data, errors } = this.state;\r\n\r\n      target.value.length <= 3\r\n        ? (errors[target.name] = `${target.name} have at least 3 letter`)\r\n        : (errors[target.name] = \"\");\r\n\r\n      data[target.name] = target.value;\r\n      this.setState({ data, errors });\r\n    };\r\n\r\n    return (\r\n      <Grid container className={classes.formContainer}>\r\n        <Grid item xs={12} sm={7}>\r\n          <form onSubmit={this.handleSubmit} className={classes.form}>\r\n            <Paper component={Box} mb={1}>\r\n              <Box pt={2}>\r\n                {renderText({\r\n                  type: \"h6\",\r\n                  color: \"primary\",\r\n                  label: \"Simple user Form\",\r\n                  align: \"center\",\r\n                })}\r\n              </Box>\r\n              <Grid container>\r\n                <Grid xs={12} sm={6}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Box mt={1} mb={1}>\r\n                        {renderInputField({\r\n                          name: \"firstName\",\r\n                          label: \"First Name\",\r\n                          type: \"text\",\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      <Box mt={1} mb={1}>\r\n                        {renderInputField({\r\n                          name: \"middleName\",\r\n                          label: \"Middle Name\",\r\n                          type: \"text\",\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      {renderInputField({\r\n                        name: \"lastName\",\r\n                        label: \"Last Name\",\r\n                        type: \"text\",\r\n                        state: this.state,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                      <Box mt={1} mb={1}>\r\n                        {renderSelect({\r\n                          name: \"gender\",\r\n                          label: \"Gender\",\r\n                          options: [\r\n                            { key: \"male\", value: \"male\" },\r\n                            { key: \"female\", value: \"female\" },\r\n                            { key: \"other\", value: \"other\" },\r\n                          ],\r\n                          state: this.state,\r\n                          onChange: handleOnChange,\r\n                        })}\r\n                      </Box>\r\n                      {renderInputField({\r\n                        name: \"suggession\",\r\n                        label: \"Suggession\",\r\n                        type: \"text\",\r\n                        state: this.state,\r\n                        onChange: handleOnChange,\r\n                      })}\r\n                    </CardContent>\r\n                    <p style={{ textAlign: \"center\" }}>\r\n                      {renderButton({ label: \"submit\" })}\r\n                    </p>\r\n                  </Card>\r\n                </Grid>\r\n\r\n                <Grid xs={12} sm={6}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <List>\r\n                        <ListItem>\r\n                          <ListItemIcon>First Name :-</ListItemIcon>\r\n                          <ListItemText>\r\n                            {this.state.data.firstName}\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemIcon>Middle Name :-</ListItemIcon>\r\n                          <ListItemText>\r\n                            {this.state.data.middleName}\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemIcon>Last Name :-</ListItemIcon>\r\n                          <ListItemText>\r\n                            {this.state.data.lastName}\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemIcon>Gender :-</ListItemIcon>\r\n                          <ListItemText>{this.state.data.gender}</ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemIcon>Suggession :-</ListItemIcon>\r\n                          <ListItemText>\r\n                            {this.state.data.suggession}\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FormComponent);\r\n","import \"./App.css\";\nimport FormComponent from \"./components/formComponent\";\n\nfunction App() {\n  return <FormComponent />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}